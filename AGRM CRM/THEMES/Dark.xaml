<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <SolidColorBrush x:Key="HeadTextMain" Color="#919191"/>
    <SolidColorBrush x:Key="ForegroundText" Color="White"/>
    <SolidColorBrush x:Key="BackgroundMain" Color="#202020"/>
    <SolidColorBrush x:Key="BackgroudSecondPage" Color="#686868"/>

    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource BackgroundMain}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>



    <Style x:Key="TextBlockNameWinStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="15 0 0 0"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Name="BorderBackGround" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource BackgroudSecondPage}"/>
    </Style>

    <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="Gray" Offset="0.0"/>
        <GradientStop Color="Gray" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="Gray"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="White"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="Gray"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Gray"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Gray"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="Gray" Offset="0.0"/>
        <GradientStop Color="Gray" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="Gray"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="Gray"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="Gray"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="Gray" Offset="0.0"/>
        <GradientStop Color="Gray" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="Gray"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="Gray" Offset="0.0"/>
        <GradientStop Color="Gray" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="Gray"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="White"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="Gray"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="Gray"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="Gray" Offset="0.0"/>
        <GradientStop Color="Gray" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="Gray"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="Gray"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="Gray"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="White"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="Gray"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="Gray"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Gray"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Gray"/>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="5" x:Name="templateRoot" Background="Transparent" BorderBrush="Gray" BorderThickness="1" SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" BorderBrush="Gray" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Gray"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Gray"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource ForegroundText}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Gray"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Gray"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Gray"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Gray"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Gray"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Gray"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="Gray"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Gray"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Gray"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate1" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome x:Name="shadow" Color="LightGray" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="dropDownBorder" Background="GRay" BorderBrush="LightGray" BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton" Background="LightGray" BorderBrush="LightGray" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="TexBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="LightGray"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="5" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
    </Style>

    <ControlTemplate x:Key="PasswordBoxCorner" TargetType="{x:Type PasswordBox}">
        <Border Background="{TemplateBinding Background}" 
        x:Name="Bd" BorderBrush="LightGray"
        BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        </Border>
    </ControlTemplate>

    <Style x:Key="FrameButtons" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource HeadTextMain}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Content" Value="✕"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroudSecondPage}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButCloseStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Content" Value="✕"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource BackgroudSecondPage}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource BackgroudSecondPage}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource BackgroudSecondPage}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyleSave" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource BackgroudSecondPage}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource BackgroudSecondPage}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource BackgroudSecondPage}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonSettings" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Content" Value="⚙"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroudSecondPage}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TabControl" TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource BackgroudSecondPage}"/>
        
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
    </Style>

    <Style TargetType="TabItem" x:Key="TC2">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" BorderThickness="2,2,2,2" BorderBrush="#424242" CornerRadius="3,3,3,3" Margin="2, 5, 1, 5">
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"
                                        ContentSource="Header"
                                        Margin="20, 0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroudSecondPage}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#424242" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItem_Main" TargetType="TabItem">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="BorderThickness" Value="2 2 2 2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource HeadTextMain}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="220"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" BorderThickness="2,2,2,2" BorderBrush="#202020" CornerRadius="3,3,3,3" Margin="2, 5, 1, 5">
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"
                                        ContentSource="Header"
                                        Margin="20, 0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#424242" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#202020" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TabItem_Main_Sub" TargetType="TabItem">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="BorderThickness" Value="2 2 2 2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#919191"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="220"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" BorderThickness="2,2,2,2" BorderBrush="#202020" CornerRadius="3,3,3,3" Margin="2, 5, 1, 5">
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"
                                        ContentSource="Header"
                                        Margin="20, 0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#424242" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#202020" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItem_Subsection" TargetType="TabItem">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" BorderThickness="2,2,2,2" BorderBrush="Transparent" CornerRadius="3,3,3,3" Margin="2, 5, 1, 5">
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"
                                        ContentSource="Header"
                                        Margin="20, 0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#555555" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItem_Subsection2" TargetType="TabItem">
        <Setter Property="Foreground" Value= "{DynamicResource ForegroundText}"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" BorderThickness="2,2,2,2" BorderBrush="#424242" CornerRadius="3,3,3,3" Margin="2, 5, 1, 5">
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"
                                        ContentSource="Header"
                                        Margin="20, 0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#606060" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#424242" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabControlMain" TargetType="TabControl">
        <Setter Property="TabStripPlacement" Value="Left"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#393939"/>
        <Setter Property="Cursor" Value="Arrow"/>
    </Style>

    <Style x:Key="TabControlSubsection" TargetType="TabControl">
        <Setter Property="TabStripPlacement" Value="Left"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#555555"/>
        <Setter Property="Cursor" Value="Arrow"/>
    </Style>

    <Style x:Key="BorderBackground" TargetType="Border">
        <Setter Property="Background" Value="#555555"/>
    </Style>

    <Style x:Key="Name_Subsection" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="210"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="FontSize" Value="23"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="CreateButton" TargetType="Button">
        <Setter Property="Content" Value="Создать"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Background" Value="#424242"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="15 10"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Gray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StackPanelStyle" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Margin" Value="0 0 15 10"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Width" Value="314"/>
    </Style>

    <Style x:Key="SearchTextBox" TargetType="TextBox">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="Background" Value="#424242"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="5" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="SearchButSet" TargetType="Button">
        <Setter Property="Background" Value="#424242"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Foreground" Value="#FFE4E4E4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="1 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Gray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SearchTextBlock" TargetType="TextBlock">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Text" Value="Введите запрос"/>
        <Setter Property="Foreground" Value="{DynamicResource HeadTextMain}"/>
        <Setter Property="Margin" Value="0 0 88 10"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Width" Value="238"/>
    </Style>

    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="RowBackground" Value="#424242"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Margin" Value="5 0 5 15"/>
        <Setter Property="Background" Value="#424242"/>
        <Setter Property="BorderBrush" Value="#303030"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Resources>
            <Style TargetType="ScrollBar">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="#202020"/>
                <Setter Property="Foreground" Value="#555555"/>
            </Style>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Gray"/>
        </Style.Resources>
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle1" TargetType="DataGridColumnHeader">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid>
                        <DataGridColumnHeader Background="#424242" HorizontalAlignment="Center"/>
                        <ContentPresenter Margin="3 0 5 0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <Style x:Key="WindowTheme" TargetType="Window">
        <Setter Property="Background" Value="#202020"/>
        <Setter Property="WindowStyle" Value="None"/>
    </Style>

    <Style x:Key="WindowThemeLogin" TargetType="Window">
        <Setter Property="Background" Value="#202020"/>
        <Setter Property="WindowStyle" Value="None"/>
    </Style>
    
    <Style x:Key="ErrorTextBlock" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="#424242"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Text" Value="Ошибка:"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="0 164 0 0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Width" Value="500"/>
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="#424242"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="ItemsControl.Background" Value="#424242"/>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="#424242"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#424242" />
            <SolidColorBrush x:Key="Background" Color="#424242"/>
        </Style.Resources>
    </Style>

    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="#424242"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
    </Style>

    <Style x:Key="ButtonStyleDelete" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" BorderThickness="2" BorderBrush="#424242" Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#424242"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#424242"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
    </Style>

    <Style x:Key="DatePickerStyle" TargetType="DatePicker">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
        <Setter Property="FontSize" Value="18"/>
        <Style.Resources>
            <Style TargetType="DatePickerTextBox">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundText}"/>
            </Style>
        </Style.Resources>
    </Style>

</ResourceDictionary>